<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:annotation-config  />
    <context:component-scan base-package="spring.tutorial" />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>  <!-- ignore non existing locations -->
        <property name="locations">
            <list>
                <value>classpath:configuration.properties</value>
                <!--value>classpath:nonexisting_locations.properties</value-->
            </list>
        </property>
        <property name="properties">
            <value>property.config.nickname=jsanca</value>
        </property>
    </bean>

    <!-- In a web application environment, Spring also supports specifying values in web.xml
        as context params or in your application server specific meta-data as servlet attributes -->
    <!--bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties"/>
    </bean-->

    <bean id="configByXML" class="spring.tutorial.ConfigByXML">
        <property name="name1" value="${property.config.name1}"/>
        <property name="name2" value="${property.config.${property.config.name2}}"/>
        <property name="name3" value="${nonexistingprop:name3}"/>
    </bean>

    <bean id="configAnnotation" class="spring.tutorial.ConfigAnnotation"/>
</beans>